
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- =========================
-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å
-- =========================
local invisRunning = false
local IsInvis = false
local noclipEnabled = false
local Character, InvisibleCharacter
local bodyPos
local invisDied
local toggleKey = Enum.KeyCode.F -- üî• ‡∏Å‡∏î F ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Invisible

-- ‚≠ê ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Boosts ‡πÅ‡∏•‡∏∞ Infinity Jump
local infinityJump = false
local jumpBoostValue = 50 -- ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö JumpBoost (‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 200)
local speedBoostValue = 16 -- ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SpeedBoost (‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 100)

-- ‚≠ê ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Noclip Connection
local noclipConnection = nil

-- ‚≠ê ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Boosts ‡πÅ‡∏•‡∏∞ Noclip ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
local characterAddedConnection = nil

-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Boosts
-- =========================
local function ApplyBoosts()
	if player.Character then
		local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			-- ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å slider ‡∏ö‡∏ß‡∏Å‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
			humanoid.JumpPower = 50 + jumpBoostValue
			humanoid.WalkSpeed = 16 + speedBoostValue
		end
	end
end

-- ‚≠ê ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è
local function OnCharacterAdded(char)
    -- ‡πÉ‡∏ä‡πâ delay ‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ Humanoid ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
    char:WaitForChild("Humanoid").Died:Wait()
    task.wait(0.1) 
    
    -- ‡∏ô‡∏≥ Boosts ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà
    ApplyBoosts()
    
    -- ‡∏´‡∏≤‡∏Å Noclip ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î Noclip ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ö‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà
    if noclipEnabled then
        SetNoclip(true)
    end
end

-- ‚≠ê ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå CharacterAdded ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
characterAddedConnection = player.CharacterAdded:Connect(OnCharacterAdded)
ApplyBoosts() -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å

-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Invisible (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏•‡∏±‡∏Å)
-- =========================
local function TurnInvisible()
	if invisRunning or IsInvis then return end
	invisRunning = true

	Character = player.Character
	if not Character then invisRunning = false return end
	Character.Archivable = true

	InvisibleCharacter = Character:Clone()
	InvisibleCharacter.Parent = workspace
    
    -- ‚≠ê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ô‡∏≥ Noclip ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô Invisible
    if noclipConnection and noclipEnabled then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end

	for _, v in pairs(InvisibleCharacter:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Transparency = (v.Name == "HumanoidRootPart") and 1 or 0.5
		end
	end

	local root = Character:FindFirstChild("HumanoidRootPart")
	if root then
		root.CFrame = root.CFrame + Vector3.new(0, 600, 0)
		bodyPos = Instance.new("BodyPosition")
		bodyPos.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		bodyPos.P = 3e4
		bodyPos.Position = root.Position
		bodyPos.Parent = root
	end

	player.Character = InvisibleCharacter
	IsInvis = true
    
    -- ‚≠ê ApplyBoosts ‡∏ö‡∏ô InvisibleCharacter
    ApplyBoosts() 

	local humanoid = InvisibleCharacter:FindFirstChildOfClass("Humanoid")
	if humanoid then
		workspace.CurrentCamera.CameraSubject = humanoid
		invisDied = humanoid.Died:Connect(function()
			IsInvis = false
		end)
	end

	if InvisibleCharacter:FindFirstChild("Animate") then
		InvisibleCharacter.Animate.Disabled = true
		InvisibleCharacter.Animate.Disabled = false
	end
    
    -- ‚≠ê ‡πÄ‡∏õ‡∏¥‡∏î Noclip ‡∏ö‡∏ô InvisibleCharacter ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    if noclipEnabled then
        SetNoclip(true)
    end

	invisRunning = false
end

local function TurnVisible()
	if not IsInvis then return end
	local CF
	local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if root then CF = root.CFrame end
    
    -- ‚≠ê ‡∏õ‡∏¥‡∏î Noclip ‡∏ö‡∏ô InvisibleCharacter ‡∏Å‡πà‡∏≠‡∏ô Visible
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end

	if InvisibleCharacter then
		InvisibleCharacter:Destroy()
		InvisibleCharacter = nil
	end

	if Character and Character.Parent then
		player.Character = Character
		if CF and Character:FindFirstChild("HumanoidRootPart") then
			Character.HumanoidRootPart.CFrame = CF
		end
		local humanoid = Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			workspace.CurrentCamera.CameraSubject = humanoid
		end
	end

	if bodyPos then
		bodyPos:Destroy()
		bodyPos = nil
	end

	if Character and Character:FindFirstChild("Animate") then
		Character.Animate.Disabled = true
		Character.Animate.Disabled = false
	end

	if invisDied then
		invisDied:Disconnect()
		invisDied = nil
	end
    
    -- ‚≠ê ApplyBoosts ‡∏ö‡∏ô Character ‡∏ï‡∏±‡∏ß‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Visible
    ApplyBoosts()
    
    -- ‚≠ê ‡πÄ‡∏õ‡∏¥‡∏î Noclip ‡∏ö‡∏ô Character ‡∏ï‡∏±‡∏ß‡∏à‡∏£‡∏¥‡∏á ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    if noclipEnabled then
        SetNoclip(true)
    end

	IsInvis = false
end

-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Noclip
-- =========================
local function SetNoclip(state)
    -- ‚≠ê ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
	noclipEnabled = state
    
	if noclipEnabled then
        -- ‚≠ê ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏Å‡πá‡∏ö Connection ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ noclipConnection
		noclipConnection = RunService.Stepped:Connect(function()
			if player.Character then
				for _, v in pairs(player.Character:GetDescendants()) do
					if v:IsA("BasePart") and v.CanCollide == true then
						v.CanCollide = false
					end
				end
			end
		end)
	else
        -- ‚≠ê ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ CanCollide ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        if player.Character then
            for _, v in pairs(player.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = true
                end
            end
        end
	end
end

-- =========================
-- UI ‡∏´‡∏•‡∏±‡∏Å (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á)
-- =========================
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "InvisUI"

local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 300, 0, 330) 
main.Position = UDim2.new(0.35, 0, 0.35, 0)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Active = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 15)

local stroke = Instance.new("UIStroke", main)
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(100, 100, 255)

-- üß± Topbar
local topbar = Instance.new("Frame", main)
topbar.Size = UDim2.new(1, 0, 0, 35)
topbar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Instance.new("UICorner", topbar).CornerRadius = UDim.new(0, 15)

local title = Instance.new("TextLabel", topbar)
title.Size = UDim2.new(0.7, 0, 1, 0)
title.BackgroundTransparency = 1
title.Text = "BASIC script CHX"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.Position = UDim2.new(0.05, 0, 0, 0)

-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πà‡∏≠ / ‡∏õ‡∏¥‡∏î
local minimize = Instance.new("TextButton", topbar)
minimize.Size = UDim2.new(0, 35, 0, 35)
minimize.Position = UDim2.new(0.75, 0, 0, 0)
minimize.Text = "üóï"
minimize.Font = Enum.Font.GothamBold
minimize.TextSize = 18
minimize.BackgroundTransparency = 1
minimize.TextColor3 = Color3.fromRGB(255, 255, 255)

local close = Instance.new("TextButton", topbar)
close.Size = UDim2.new(0, 35, 0, 35)
close.Position = UDim2.new(0.88, 0, 0, 0)
close.Text = "‚ùå"
close.Font = Enum.Font.GothamBold
close.TextSize = 18
close.BackgroundTransparency = 1
close.TextColor3 = Color3.fromRGB(255, 120, 120)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°
local function createButton(text, yPos)
	local btn = Instance.new("TextButton", main)
	btn.Size = UDim2.new(0.85, 0, 0, 40)
	btn.Position = UDim2.new(0.075, 0, yPos, 0)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Text = text
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 15
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
	return btn
end

-- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°
local toggleBtn = createButton("üîò Invisible: OFF", 0.12)
local noclipBtn = createButton("üöÄ Noclip: OFF", 0.25)
local infJumpBtn = createButton("üåü Infinity Jump: OFF", 0.38)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Slider
local function createSlider(text, yPos)
	-- TextLabel ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤
	local sliderLabel = Instance.new("TextLabel", main)
	sliderLabel.Size = UDim2.new(0.85, 0, 0, 25)
	sliderLabel.Position = UDim2.new(0.075, 0, yPos, 0)
	sliderLabel.Text = text
	sliderLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	sliderLabel.Font = Enum.Font.GothamBold
	sliderLabel.TextSize = 15
	Instance.new("UICorner", sliderLabel).CornerRadius = UDim.new(0, 10)

	-- Frame ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á Slider
	local sliderBar = Instance.new("Frame", main)
	sliderBar.Size = UDim2.new(0.85, 0, 0, 10)
	sliderBar.Position = UDim2.new(0.075, 0, yPos + 0.08, 0)
	sliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(0, 5)
    sliderBar.Active = true 

	-- Thumb (‡∏à‡∏∏‡∏î‡∏•‡∏≤‡∏Å)
	local sliderThumb = Instance.new("Frame", sliderBar)
	sliderThumb.Size = UDim2.new(0, 10, 1, 0)
	sliderThumb.Position = UDim2.new(0, 0, 0, 0)
	sliderThumb.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
	Instance.new("UICorner", sliderThumb).CornerRadius = UDim.new(0, 5)

	return sliderLabel, sliderBar, sliderThumb
end

-- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Slider
local jumpSliderLabel, jumpSliderBar, jumpSliderThumb = createSlider("JumpBoost: "..jumpBoostValue, 0.54)
local speedSliderLabel, speedSliderBar, speedSliderThumb = createSlider("SpeedBoost: "..speedBoostValue, 0.73)


-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô UI / Logic
-- =========================
local function ToggleInvisible()
	if IsInvis then
		TurnVisible()
		toggleBtn.Text = "üîò Invisible: OFF"
		TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
	else
		TurnInvisible()
		toggleBtn.Text = "üü¢ Invisible: ON"
		TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(0, 170, 100)}):Play()
	end
end

toggleBtn.MouseButton1Click:Connect(ToggleInvisible)

noclipBtn.MouseButton1Click:Connect(function()
	noclipEnabled = not noclipEnabled
	SetNoclip(noclipEnabled)
	noclipBtn.Text = noclipEnabled and "üü¢ Noclip: ON" or "üöÄ Noclip: OFF"
	TweenService:Create(noclipBtn, TweenInfo.new(0.3), {
		BackgroundColor3 = noclipEnabled and Color3.fromRGB(0, 170, 100) or Color3.fromRGB(60, 60, 60)
	}):Play()
end)

infJumpBtn.MouseButton1Click:Connect(function()
	infinityJump = not infinityJump
	infJumpBtn.Text = infinityJump and "üü¢ Infinity Jump: ON" or "üåü Infinity Jump: OFF"
	TweenService:Create(infJumpBtn, TweenInfo.new(0.3), {
		BackgroundColor3 = infinityJump and Color3.fromRGB(0, 170, 100) or Color3.fromRGB(60, 60, 60)
	}):Play()
end)


-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Slider
local function setupSlider(sliderLabel, sliderBar, sliderThumb, valueVar, maxVal, textPrefix)
	local function updateSlider(mouseX)
		local ratio = math.clamp(mouseX / sliderBar.AbsoluteSize.X, 0, 1)
		
		-- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å
        if valueVar == "jumpBoostValue" then
            jumpBoostValue = math.floor(ratio * maxVal)
        elseif valueVar == "speedBoostValue" then
            speedBoostValue = math.floor(ratio * maxVal)
        end
		
		-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó UI
		sliderLabel.Text = textPrefix .. (valueVar == "jumpBoostValue" and jumpBoostValue or speedBoostValue)
		sliderThumb.Position = UDim2.new(ratio, -5, 0, 0)
		
		ApplyBoosts() -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Boosts ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
	end

	sliderBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			local mouse = player:GetMouse()
			local conn
			
			-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å
			updateSlider(input.Position.X - sliderBar.AbsolutePosition.X)

			conn = mouse.Move:Connect(function()
				local mouseX = mouse.X - sliderBar.AbsolutePosition.X
				updateSlider(mouseX)
			end)
			
			local release
			release = UserInputService.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					conn:Disconnect()
					release:Disconnect()
				end
			end)
		end
	end)
end

-- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Slider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö JumpBoost ‡πÅ‡∏•‡∏∞ SpeedBoost
setupSlider(jumpSliderLabel, jumpSliderBar, jumpSliderThumb, "jumpBoostValue", 200, "JumpBoost: ")
setupSlider(speedSliderLabel, speedSliderBar, speedSliderThumb, "speedBoostValue", 100, "SpeedBoost: ")

-- ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Thumb ‡πÅ‡∏•‡∏∞ Label ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
jumpSliderLabel.Text = "JumpBoost: "..jumpBoostValue
jumpSliderThumb.Position = UDim2.new(jumpBoostValue/200, -5, 0, 0)

speedSliderLabel.Text = "SpeedBoost: "..speedBoostValue
speedSliderThumb.Position = UDim2.new(speedBoostValue/100, -5, 0, 0)


close.MouseButton1Click:Connect(function()
	TurnVisible()
    
    -- ‚≠ê ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Noclip ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î UI
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
	-- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ Boosts ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î UI
	jumpBoostValue = 0
	speedBoostValue = 0
	ApplyBoosts()
	
	IsInvis = false
	noclipEnabled = false
	infinityJump = false
	main.Visible = false
end)

-- =========================
-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πà‡∏≠ UI
-- =========================
local minimized = false
minimize.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		for _, child in pairs(main:GetChildren()) do
			if child ~= topbar then child.Visible = false end
		end
		TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 300, 0, 40)}):Play()
	else
		for _, child in pairs(main:GetChildren()) do
			child.Visible = true
		end
		TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 300, 0, 330)}):Play() 
	end
end)

-- =========================
-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏≤‡∏Å UI (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á)
-- =========================
local dragging = false
local dragStart, startPos

local function updateDrag(input)
	local delta = input.Position - dragStart
	main.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

topbar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1
	or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
	end
end)

topbar.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1
	or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement
	or input.UserInputType == Enum.UserInputType.Touch) then
		updateDrag(input)
	end
end)

-- =========================
-- Hotkey Toggle Invisible
-- =========================
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == toggleKey then
		ToggleInvisible()
	end
end)

-- Infinity Jump Logic (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏•‡∏±‡∏Å)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.Space and infinityJump then
		if player.Character then
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end
	end
end)

-- Apply initial boosts (‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô)
