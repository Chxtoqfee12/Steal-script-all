-- üåà Invisible + Noclip + Infinity Jump (‡∏Å‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ) + JumpBoost + SpeedBoost + Invisible 2 UI (‡∏Ñ‡∏£‡∏ö‡∏à‡∏ö)
-- ‚≠ê ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏±‡πä‡∏Å Invisible 2 (‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏•‡∏≠‡∏¢‡∏Ñ‡πâ‡∏≤‡∏á) ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô Invisible 1
-- ‚úÖ NEW: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Ñ Speed/JumpBoost ‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏° Slider (‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- =========================
-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å
-- =========================
local invisRunning = false
local IsInvis = false         -- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Invisible 1 (‡∏ö‡∏¥‡∏ô‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤)
local IsInvis2 = false        -- ‚≠ê ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Invisible 2 (‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô)
local noclipEnabled = false
local Character, InvisibleCharacter, InvisibleCharacter2 
local bodyPos
local invisDied
local toggleKey = Enum.KeyCode.F

local infinityJump = false
local jumpBoostValue = 50
local speedBoostValue = 16

local noclipConnection = nil
local characterAddedConnection = nil
local boostSyncConnection = nil -- ‚≠ê NEW: Connection ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ Boost

-- ‚≠ê ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Invisible 2
local Depth = -30
local highlight
local syncConnection
local invis2Running = false

-- ‚≠ê ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Infinity Jump (‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á)
local infinityJumpConnection = nil
local JUMP_COOLDOWN = 0.1 


-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Boosts
-- =========================
local function ApplyBoosts()
	if player.Character then
		local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.JumpPower = 50 + jumpBoostValue
			humanoid.WalkSpeed = 16 + speedBoostValue
		end
	end
end

-- ‚≠ê NEW: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ Boost ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤
local function StartBoostSync()
    if boostSyncConnection then return end
    
    -- ‡πÉ‡∏ä‡πâ Heartbeat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
    boostSyncConnection = RunService.Heartbeat:Connect(ApplyBoosts)
end

local function StopBoostSync()
    if boostSyncConnection then
        boostSyncConnection:Disconnect()
        boostSyncConnection = nil
    end
    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Roblox
    if player.Character then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = 50 
            humanoid.WalkSpeed = 16
        end
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è
local function OnCharacterAdded(char)
    local humanoid = char:WaitForChild("Humanoid")
    if humanoid then
        humanoid.Died:Wait()
    end
    task.wait(0.1) 
    
    ApplyBoosts()
    
    if noclipEnabled then
        if not noclipConnection then
            SetNoclip(true)
        end
    end
    
    if infinityJump and not infinityJumpConnection then
        StartContinuousJump()
    end
end

characterAddedConnection = player.CharacterAdded:Connect(OnCharacterAdded)
ApplyBoosts()


-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Noclip
-- =========================
local function SetNoclip(state)
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
	noclipEnabled = state
    
	if noclipEnabled then
		noclipConnection = RunService.Stepped:Connect(function()
			if player.Character then
				for _, v in pairs(player.Character:GetDescendants()) do
					if v:IsA("BasePart") and v.CanCollide == true then
						v.CanCollide = false
					end
				end
			end
		end)
	else
        if player.Character then
            for _, v in pairs(player.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = true
                end
            end
        end
	end
end

-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Invisible / Visible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤)
-- =========================
local function TurnInvisible()
    if IsInvis2 then TurnVisible2() end
    
	if invisRunning or IsInvis then return end
	invisRunning = true

	Character = player.Character
	if not Character then invisRunning = false return end
	Character.Archivable = true

    if noclipConnection and noclipEnabled then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end

	InvisibleCharacter = Character:Clone()
	InvisibleCharacter.Parent = workspace

	for _, v in pairs(InvisibleCharacter:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Transparency = (v.Name == "HumanoidRootPart") and 1 or 0.5
		end
	end

	local root = Character:FindFirstChild("HumanoidRootPart")
	if root then
		root.CFrame = root.CFrame + Vector3.new(0, 600, 0)
		bodyPos = Instance.new("BodyPosition")
		bodyPos.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		bodyPos.P = 3e4
		bodyPos.Position = root.Position
		bodyPos.Parent = root
	end

	player.Character = InvisibleCharacter
	IsInvis = true
    ApplyBoosts() 

	local humanoid = InvisibleCharacter:FindFirstChildOfClass("Humanoid")
	if humanoid then
		workspace.CurrentCamera.CameraSubject = humanoid
		invisDied = humanoid.Died:Connect(function() IsInvis = false end)
	end

	if InvisibleCharacter:FindFirstChild("Animate") then
		InvisibleCharacter.Animate.Disabled = true
		InvisibleCharacter.Animate.Disabled = false
	end
    
    if noclipEnabled then SetNoclip(true) end

	invisRunning = false
end

local function TurnVisible()
	if not IsInvis then return end
	local CF
	local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if root then CF = root.CFrame end
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end

	if InvisibleCharacter then
		InvisibleCharacter:Destroy()
		InvisibleCharacter = nil
	end

	if Character and Character.Parent then
		player.Character = Character
		if CF and Character:FindFirstChild("HumanoidRootPart") then
			Character.HumanoidRootPart.CFrame = CF
		end
		local humanoid = Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			workspace.CurrentCamera.CameraSubject = humanoid
		end
	end

	if bodyPos then bodyPos:Destroy() bodyPos = nil end

	if Character and Character:FindFirstChild("Animate") then
		Character.Animate.Disabled = true
		Character.Animate.Disabled = false
	end

	if invisDied then invisDied:Disconnect() invisDied = nil end
    
    ApplyBoosts()
    if noclipEnabled then SetNoclip(true) end

	IsInvis = false
end


-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Invisible 2 / Visible 2 (‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô)
-- =========================
local function TurnInvisible2()
    if IsInvis then TurnVisible() end
    
	if invis2Running or IsInvis2 then return end
	invis2Running = true
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end

	Character = player.Character
	if not Character then invis2Running = false return end
	Character.Archivable = true

	InvisibleCharacter2 = Character:Clone()
	InvisibleCharacter2.Parent = workspace

	for _, v in pairs(InvisibleCharacter2:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Transparency = (v.Name == "HumanoidRootPart") and 1 or 0.4
			v.CanCollide = true 
		end
	end

	local root = Character:FindFirstChild("HumanoidRootPart")
	local invisRoot = InvisibleCharacter2:FindFirstChild("HumanoidRootPart")

	if root and invisRoot then
		root.CFrame = invisRoot.CFrame * CFrame.new(0, Depth, 0)

		highlight = Instance.new("Highlight")
		highlight.Parent = Character
		highlight.FillColor = Color3.fromRGB(255, 0, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 50, 50)
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

		for _, v in pairs(Character:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Anchored = false
				v.CanCollide = false -- ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏°‡∏∏‡∏î‡∏•‡∏á‡πÑ‡∏õ‡πÑ‡∏î‡πâ
			end
		end
		root.Anchored = false

		syncConnection = RunService.Heartbeat:Connect(function()
			if not root or not invisRoot then return end
			root.CFrame = invisRoot.CFrame * CFrame.new(0, Depth, 0)
		end)
	end

	player.Character = InvisibleCharacter2
	IsInvis2 = true
    ApplyBoosts() 

    if InvisibleCharacter2:FindFirstChild("Animate") then
        InvisibleCharacter2.Animate.Disabled = true
        InvisibleCharacter2.Animate.Disabled = false
    end

	local humanoid = InvisibleCharacter2:FindFirstChildOfClass("Humanoid")
	if humanoid then
		workspace.CurrentCamera.CameraSubject = humanoid
		invisDied = humanoid.Died:Connect(function()
			TurnVisible2()
		end)
	end

	invis2Running = false
end

local function TurnVisible2()
	if not IsInvis2 then return end

	if syncConnection then
		syncConnection:Disconnect()
		syncConnection = nil
	end

    -- ‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤ Humanoid ‡∏Ç‡∏≠‡∏á‡∏£‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô player.Character
    local actualHumanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    
	if invisDied then
		invisDied:Disconnect()
		invisDied = nil
	end
    
    -- ‚≠ê 1. ‡πÄ‡∏Å‡πá‡∏ö Animate script ‡∏à‡∏≤‡∏Å‡∏£‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡∏•‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏•‡∏≤‡∏¢
    local clonedAnimateScript = nil
    if InvisibleCharacter2 and InvisibleCharacter2:FindFirstChild("Animate") then
        clonedAnimateScript = InvisibleCharacter2.Animate:Clone()
    end
    
    -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ CanCollide ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á
    if Character then
        for _, v in pairs(Character:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
    end

    if noclipEnabled then
        SetNoclip(true)
    end

	local root = Character and Character:FindFirstChild("HumanoidRootPart")
	local invisRoot = InvisibleCharacter2 and InvisibleCharacter2:FindFirstChild("HumanoidRootPart")

	if root and invisRoot then
		-- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡∏•‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
		root.CFrame = invisRoot.CFrame 
	end

	if InvisibleCharacter2 then
		InvisibleCharacter2:Destroy()
		InvisibleCharacter2 = nil
	end

	if highlight then
		highlight:Destroy()
		highlight = nil
	end

	player.Character = Character
    
    -- ‚≠ê 2. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Animate Script ‡πÉ‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á
    if Character and clonedAnimateScript then
        -- ‡∏•‡∏ö Animate script ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        local existingAnimate = Character:FindFirstChild("Animate")
        if existingAnimate then
            existingAnimate:Destroy()
        end
        -- ‡πÉ‡∏™‡πà‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏Ñ‡∏•‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        clonedAnimateScript.Parent = Character
    end
    
    -- ‚≠ê 3. ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Humanoid ‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏î‡∏¥‡∏ô (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!)
    if actualHumanoid then
        -- ‡πÉ‡∏ä‡πâ Running ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        actualHumanoid:ChangeState(Enum.HumanoidStateType.Running)
    end
    
    ApplyBoosts()

	if Character and actualHumanoid then
		workspace.CurrentCamera.CameraSubject = actualHumanoid
	end

	IsInvis2 = false
end

-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Infinity Jump (Continuous)
-- =========================
local function StartContinuousJump()
    if infinityJumpConnection then return end
    
    infinityJumpConnection = RunService.Heartbeat:Connect(function()
        if infinityJump and UserInputService:IsKeyDown(Enum.KeyCode.Space) and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            
            if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

local function StopContinuousJump()
    if infinityJumpConnection then
        infinityJumpConnection:Disconnect()
        infinityJumpConnection = nil
    end
end


-- =========================
-- UI ‡∏´‡∏•‡∏±‡∏Å 
-- =========================
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "InvisUI"

local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 300, 0, 430) 
main.Position = UDim2.new(0.35, 0, 0.35, 0)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Active = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 15)

local stroke = Instance.new("UIStroke", main)
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(100, 100, 255)

-- üß± Topbar
local topbar = Instance.new("Frame", main)
topbar.Size = UDim2.new(1, 0, 0, 35)
topbar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Instance.new("UICorner", topbar).CornerRadius = UDim.new(0, 15)

local title = Instance.new("TextLabel", topbar)
title.Size = UDim2.new(0.7, 0, 1, 0)
title.BackgroundTransparency = 1
title.Text = "Invisible + Boosts"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.Position = UDim2.new(0.05, 0, 0, 0)

local minimize = Instance.new("TextButton", topbar)
minimize.Size = UDim2.new(0, 35, 0, 35)
minimize.Position = UDim2.new(0.88, 0, 0, 0) 
minimize.Text = "üóï"
minimize.Font = Enum.Font.GothamBold
minimize.TextSize = 18
minimize.BackgroundTransparency = 1
minimize.TextColor3 = Color3.fromRGB(255, 255, 255)

local close = Instance.new("TextButton", topbar)
close.Size = UDim2.new(0, 35, 0, 35)
close.Position = UDim2.new(0.80, 0, 0, 0) 
close.Text = "‚ùå"
close.Font = Enum.Font.GothamBold
close.TextSize = 18
close.BackgroundTransparency = 1
close.TextColor3 = Color3.fromRGB(255, 120, 120)

local function createButton(text, yPos)
	local btn = Instance.new("TextButton", main)
	btn.Size = UDim2.new(0.85, 0, 0, 40)
	btn.Position = UDim2.new(0.075, 0, yPos, 0)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Text = text
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 15
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
	return btn
end

local toggleBtn = createButton("‚òÅÔ∏è Invisible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤): OFF", 0.10)
local toggleBtn2 = createButton("üîª Invisible 2 (‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô): OFF", 0.21)
local noclipBtn = createButton("üöÄ Noclip: OFF", 0.32)
local infJumpBtn = createButton("üåü Infinity Jump: OFF", 0.43)

local function createSlider(text, yPos)
	local sliderLabel = Instance.new("TextLabel", main)
	sliderLabel.Size = UDim2.new(0.85, 0, 0, 25)
	sliderLabel.Position = UDim2.new(0.075, 0, yPos, 0)
	sliderLabel.Text = text
	sliderLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	sliderLabel.Font = Enum.Font.GothamBold
	sliderLabel.TextSize = 15
	Instance.new("UICorner", sliderLabel).CornerRadius = UDim.new(0, 10)

	local sliderBar = Instance.new("Frame", main)
	sliderBar.Size = UDim2.new(0.85, 0, 0, 10)
	sliderBar.Position = UDim2.new(0.075, 0, yPos + 0.05, 0)
	sliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(0, 5)
    sliderBar.Active = true 

	local sliderThumb = Instance.new("Frame", sliderBar)
	sliderThumb.Size = UDim2.new(0, 10, 1, 0)
	sliderThumb.Position = UDim2.new(0, 0, 0, 0)
	sliderThumb.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
	Instance.new("UICorner", sliderThumb).CornerRadius = UDim.new(0, 5)

	return sliderLabel, sliderBar, sliderThumb
end

local jumpSliderLabel, jumpSliderBar, jumpSliderThumb = createSlider("JumpBoost: "..jumpBoostValue, 0.54)
local speedSliderLabel, speedSliderBar, speedSliderThumb = createSlider("SpeedBoost: "..speedBoostValue, 0.65)
local depthSliderLabel, depthSliderBar, depthSliderThumb = createSlider("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô: "..Depth, 0.76)


-- =========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô UI / Logic 
-- =========================
toggleBtn.MouseButton1Click:Connect(function()
    if IsInvis then
        TurnVisible()
		toggleBtn.Text = "‚òÅÔ∏è Invisible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤): OFF"
		TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
	else
        TurnInvisible()
		toggleBtn.Text = "üü¢ Invisible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤): ON"
		TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(0, 170, 100)}):Play()
	end
end)

toggleBtn2.MouseButton1Click:Connect(function()
    if IsInvis2 then
        TurnVisible2()
		toggleBtn2.Text = "üîª Invisible 2 (‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô): OFF"
		TweenService:Create(toggleBtn2, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
	else
        TurnInvisible2()
		toggleBtn2.Text = "üü¢ Invisible 2 (‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô): ON"
		TweenService:Create(toggleBtn2, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(0, 170, 100)}):Play()
	end
end)

noclipBtn.MouseButton1Click:Connect(function()
	noclipEnabled = not noclipEnabled
	SetNoclip(noclipEnabled)
	noclipBtn.Text = noclipEnabled and "üü¢ Noclip: ON" or "üöÄ Noclip: OFF"
	TweenService:Create(noclipBtn, TweenInfo.new(0.3), {
		BackgroundColor3 = noclipEnabled and Color3.fromRGB(0, 170, 100) or Color3.fromRGB(60, 60, 60)
	}):Play()
end)

infJumpBtn.MouseButton1Click:Connect(function()
	infinityJump = not infinityJump
    
    if infinityJump then
        StartContinuousJump() 
    else
        StopContinuousJump() 
    end
    
	infJumpBtn.Text = infinityJump and "üü¢ Infinity Jump: ON" or "üåü Infinity Jump: OFF"
	TweenService:Create(infJumpBtn, TweenInfo.new(0.3), {
		BackgroundColor3 = infinityJump and Color3.fromRGB(0, 170, 100) or Color3.fromRGB(60, 60, 60)
	}):Play()
end)


-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Slider
local function setupSlider(sliderLabel, sliderBar, sliderThumb, valueVar, maxVal, minVal, textPrefix)
	local function updateSlider(mouseX)
		local ratio = math.clamp(mouseX / sliderBar.AbsoluteSize.X, 0, 1)
        
        local range = maxVal - minVal
		local value = minVal + (ratio * range)
        
        if valueVar == "jumpBoostValue" then
            jumpBoostValue = math.floor(value)
        elseif valueVar == "speedBoostValue" then
            speedBoostValue = math.floor(value)
        elseif valueVar == "Depth" then
            Depth = math.floor(value)
            -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πÑ‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
            if IsInvis2 and InvisibleCharacter2 and Character then
                 local root = Character:FindFirstChild("HumanoidRootPart")
                 local invisRoot = InvisibleCharacter2:FindFirstChild("HumanoidRootPart")
                 if root and invisRoot then
                     root.CFrame = invisRoot.CFrame * CFrame.new(0, Depth, 0)
                 end
            end
        end
		
        local displayValue = (valueVar == "jumpBoostValue" and jumpBoostValue) or (valueVar == "speedBoostValue" and speedBoostValue) or Depth
		sliderLabel.Text = textPrefix .. displayValue
		sliderThumb.Position = UDim2.new(ratio, -5, 0, 0)
		
		ApplyBoosts()
	end

	sliderBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			local mouse = player:GetMouse()
			local conn
			
			updateSlider(input.Position.X - sliderBar.AbsolutePosition.X)

			conn = mouse.Move:Connect(function()
				local mouseX = mouse.X - sliderBar.AbsolutePosition.X
				updateSlider(mouseX)
			end)
			
			local release
			release = UserInputService.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					conn:Disconnect()
					release:Disconnect()
				end
			end)
		end
	end)
end

setupSlider(jumpSliderLabel, jumpSliderBar, jumpSliderThumb, "jumpBoostValue", 200, 0, "JumpBoost: ")
setupSlider(speedSliderLabel, speedSliderBar, speedSliderThumb, "speedBoostValue", 100, 0, "SpeedBoost: ")
setupSlider(depthSliderLabel, depthSliderBar, depthSliderThumb, "Depth", -1, -100, "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô: ")

-- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Slider UI
local jumpRatio = jumpBoostValue / 200
jumpSliderThumb.Position = UDim2.new(jumpRatio, -5, 0, 0)
jumpSliderLabel.Text = "JumpBoost: "..jumpBoostValue

local speedRatio = speedBoostValue / 100
speedSliderThumb.Position = UDim2.new(speedRatio, -5, 0, 0)
speedSliderLabel.Text = "SpeedBoost: "..speedBoostValue

local depthRatio = (-30 - (-100)) / ((-1) - (-100))
depthSliderThumb.Position = UDim2.new(depthRatio, -5, 0, 0)
depthSliderLabel.Text = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô: "..Depth

close.MouseButton1Click:Connect(function()
	TurnVisible()
    TurnVisible2()
    StopContinuousJump() 
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    StopBoostSync() -- ‚≠ê ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ Boosts
	
	jumpBoostValue = 0
	speedBoostValue = 0
	ApplyBoosts() 
	
	IsInvis = false
    IsInvis2 = false
	noclipEnabled = false
	infinityJump = false
	main.Visible = false
end)

-- =========================
-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πà‡∏≠ UI
-- =========================
local minimized = false
minimize.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
        -- ‡∏¢‡πà‡∏≠: ‡∏ã‡πà‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô Topbar ‡πÅ‡∏•‡∏∞‡∏¢‡πà‡∏≠‡∏Ç‡∏ô‡∏≤‡∏î main
		for _, child in pairs(main:GetChildren()) do
			if child ~= topbar then child.Visible = false end
		end
		TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 300, 0, 40)}):Play()
	else
        -- ‡∏Ç‡∏¢‡∏≤‡∏¢: ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î main ‡∏Å‡πà‡∏≠‡∏ô
		TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 300, 0, 430)}):Play() 
        
        -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (0.2 ‡∏ß‡∏¥) ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á UI ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô
        task.delay(0.2, function()
            for _, child in pairs(main:GetChildren()) do
                child.Visible = true
            end
        end)
	end
end)

-- =========================
-- ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏≤‡∏Å UI
-- =========================
local dragging = false
local dragStart, startPos

local function updateDrag(input)
	local delta = input.Position - dragStart
	main.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

topbar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1
	or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
	end
end)

topbar.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1
	or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement
	or input.UserInputType == Enum.UserInputType.Touch) then
		updateDrag(input)
	end
end)

-- =========================
-- Hotkey Toggle Invisible
-- =========================
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == toggleKey then
        if IsInvis then
		    TurnVisible()
            toggleBtn.Text = "‚òÅÔ∏è Invisible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤): OFF"
            TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        else
            TurnInvisible()
            toggleBtn.Text = "üü¢ Invisible 1 (‡∏•‡∏≠‡∏¢‡∏ü‡πâ‡∏≤): ON"
            TweenService:Create(toggleBtn, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(0, 170, 100)}):Play()
        end
	end
end)

-- ‚≠ê ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ Boost ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
StartBoostSync()
